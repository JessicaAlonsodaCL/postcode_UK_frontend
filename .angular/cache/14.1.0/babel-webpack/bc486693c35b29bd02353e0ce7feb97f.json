{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Postcode } from './shared/postcode.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app-service.service\";\nimport * as i2 from \"@angular/google-maps\";\nimport * as i3 from \"@angular/common\";\n\nfunction AppComponent_map_marker_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-marker\", 12);\n  }\n\n  if (rf & 2) {\n    const marker_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"position\", marker_r4.position);\n  }\n}\n\nfunction AppComponent_map_directions_renderer_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-directions-renderer\", 13);\n  }\n\n  if (rf & 2) {\n    const directionsResults_r5 = ctx.ngIf;\n    i0.ɵɵproperty(\"directions\", directionsResults_r5);\n  }\n}\n\nfunction AppComponent_a_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 14)(1, \"label\", 2);\n    i0.ɵɵtext(2, \"postcode:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"label\", 2);\n    i0.ɵɵtext(5, \"Latitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"label\", 2);\n    i0.ɵɵtext(8, \"Longitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementStart(10, \"label\", 2);\n    i0.ɵɵtext(11, \"Distance to London Heathrow:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const postcode_r6 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", postcode_r6.postcode, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" (\", postcode_r6.latitude, \") \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", postcode_r6.longitude, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r3.distanceKm, \" km / \", ctx_r3.distanceMiles, \" miles \");\n  }\n}\n\nexport class AppComponent {\n  constructor(service, mapDirectionsService) {\n    this.service = service;\n    this.mapDirectionsService = mapDirectionsService;\n    this.title = 'postcodes-app';\n    this.postcodes = [];\n    this.postcode = '';\n    this.markers = [];\n    this.zoom = 14;\n  }\n\n  ngOnInit() {}\n\n  onEnter(value) {\n    this.postcode = value;\n    this.validatePostcode(this.postcode);\n  }\n\n  getDataFromAPI(postcode) {\n    this.service.getData(postcode).pipe(map(res => JSON.parse(JSON.stringify(res)))).subscribe({\n      next: response => {\n        console.log('Response from API is ', response);\n\n        if (this.postcodes.length < 3) {\n          this.postcodes.push(new Postcode(response.postcode, response.latitude, response.longitude, response.country, response.region));\n        } else {\n          this.postcodes.shift();\n          this.postcodes.push(new Postcode(response.postcode, response.latitude, response.longitude, response.country, response.region));\n        }\n\n        this.changePositionMap(response.latitude, response.longitude);\n      },\n      error: error => {\n        console.log('Error is', error);\n      }\n    });\n  }\n\n  validatePostcode(postcode) {\n    this.service.validatePostcodeService(postcode).subscribe({\n      next: response => {\n        if (response) {\n          this.getDataFromAPI(postcode);\n        } else {\n          alert('Enter a valid postal code');\n        }\n      },\n      error: error => {\n        console.log('Error is', error);\n      }\n    });\n  }\n\n  changePositionMap(lat, long) {\n    const lat2 = 51.4700223;\n    const long2 = -0.4542955;\n    this.center = {\n      lat: lat,\n      lng: long\n    };\n    this.markers.push({\n      position: {\n        lat: lat,\n        lng: long\n      }\n    });\n    this.getDistanceFromLatLongInKm(lat, long, lat2, long2); //define direction \n\n    const request = {\n      destination: {\n        lat: lat2,\n        lng: long2\n      },\n      origin: {\n        lat: lat,\n        lng: long\n      },\n      travelMode: google.maps.TravelMode.DRIVING\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  getDistanceFromLatLongInKm(lat1, long1, lat2, long2) {\n    const radius = 6371;\n    const dLat = this.deg2rad(lat2 - lat1);\n    const dLong = this.deg2rad(long2 - long1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    this.distanceKm = parseFloat((radius * c).toFixed(2));\n    this.distanceMiles = this.distanceKm * 0, 621371;\n    console.log(parseFloat(this.distanceMiles));\n  }\n\n  deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  }\n\n  moveMap(event) {\n    if (event.latLng != null) this.center = event.latLng.toJSON();\n  }\n\n  move(event) {\n    if (event.latLng != null) this.display = event.latLng.toJSON();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService), i0.ɵɵdirectiveInject(i2.MapDirectionsService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 20,\n  vars: 7,\n  consts: [[1, \"form-group\", \"row\"], [1, \"col-xs-12\"], [1, \"control-label\"], [1, \"sr-only\"], [\"type\", \"postcode\", \"id\", \"inputPassword2\", \"placeholder\", \"Postcode\", 1, \"form-control\", 3, \"keyup.enter\"], [\"postcode\", \"\"], [1, \"row\"], [\"height\", \"400px\", \"width\", \"1140px\", 3, \"center\", \"zoom\", \"mapClick\", \"mapMousemove\"], [3, \"position\", 4, \"ngFor\", \"ngForOf\"], [3, \"directions\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item\", \"style\", \"cursor: pointer\", 4, \"ngFor\", \"ngForOf\"], [3, \"position\"], [3, \"directions\"], [1, \"list-group-item\", 2, \"cursor\", \"pointer\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Postcode:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Postcode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4, 5);\n      i0.ɵɵlistener(\"keyup.enter\", function AppComponent_Template_input_keyup_enter_6_listener() {\n        i0.ɵɵrestoreView(_r7);\n\n        const _r0 = i0.ɵɵreference(7);\n\n        return i0.ɵɵresetView(ctx.onEnter(_r0.value));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 1)(11, \"google-map\", 7);\n      i0.ɵɵlistener(\"mapClick\", function AppComponent_Template_google_map_mapClick_11_listener($event) {\n        return ctx.moveMap($event);\n      })(\"mapMousemove\", function AppComponent_Template_google_map_mapMousemove_11_listener($event) {\n        return ctx.move($event);\n      });\n      i0.ɵɵtemplate(12, AppComponent_map_marker_12_Template, 1, 1, \"map-marker\", 8);\n      i0.ɵɵtemplate(13, AppComponent_map_directions_renderer_13_Template, 1, 1, \"map-directions-renderer\", 9);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"div\", 1);\n      i0.ɵɵelement(17, \"hr\");\n      i0.ɵɵelementStart(18, \"ul\", 10);\n      i0.ɵɵtemplate(19, AppComponent_a_19_Template, 13, 5, \"a\", 11);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"center\", ctx.center)(\"zoom\", ctx.zoom);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 5, ctx.directionsResults$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.postcodes);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.GoogleMap, i2.MapDirectionsRenderer, i2.MapMarker, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["map","Postcode","i0","AppComponent","constructor","service","mapDirectionsService","ngOnInit","onEnter","value","postcode","validatePostcode","getDataFromAPI","getData","pipe","res","JSON","parse","stringify","subscribe","next","response","console","log","postcodes","length","push","latitude","longitude","country","region","shift","changePositionMap","error","validatePostcodeService","alert","lat","long","lat2","long2","center","lng","markers","position","getDistanceFromLatLongInKm","request","destination","origin","travelMode","google","maps","TravelMode","DRIVING","directionsResults$","route","result","lat1","long1","radius","dLat","deg2rad","dLong","a","Math","sin","cos","c","atan2","sqrt","distanceKm","parseFloat","toFixed","distanceMiles","deg","PI","moveMap","event","latLng","toJSON","move","display","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\Jessica\\Development\\postcodes\\postcodes-app\\src\\app\\app.component.ts","C:\\Users\\User\\Desktop\\Jessica\\Development\\postcodes\\postcodes-app\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AppServiceService } from './app-service.service';\nimport { map} from 'rxjs/operators';\nimport { Postcode } from './shared/postcode.model';\nimport { Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit{\n  title = 'postcodes-app';\n  postcodes: Postcode[] = [];\n  display: any;\n  postcode = '';\n  control!: {};\n\n\n  //maps\n  center!: google.maps.LatLngLiteral;\n\n\n  markers = []  as  any;\n  zoom = 14;\n\n  distanceKm?: number;\n  distanceMiles?: number;\n\n  //instatiate google map objects for directions \n  directionsResults$!: Observable<google.maps.DirectionsResult | undefined>;\n\n\n  constructor(private service : AppServiceService, private mapDirectionsService: MapDirectionsService){}\n\n  ngOnInit() {}\n\n  onEnter(value: string) {\n    this.postcode = value;\n    this.validatePostcode(this.postcode);\n  }\n\n  getDataFromAPI(postcode: string){\n    this.service.getData(postcode).pipe(map((res) => JSON.parse(JSON.stringify(res)))).subscribe({\n      next: response => {\n        console.log('Response from API is ', response);\n        if(this.postcodes.length < 3){\n          this.postcodes.push(new Postcode(response.postcode, response.latitude, response.longitude, response.country, response.region));\n        }else{\n          this.postcodes.shift();\n          this.postcodes.push(new Postcode(response.postcode, response.latitude, response.longitude, response.country, response.region));\n        }\n        \n        this.changePositionMap(response.latitude, response.longitude);\n      }, \n      error: error => {\n        console.log('Error is', error);\n      }\n    })\n  }\n\n  validatePostcode(postcode: string){\n    this.service.validatePostcodeService(postcode).subscribe({\n      next: response => {\n        if(response){\n          this.getDataFromAPI(postcode);\n        }else{\n          alert('Enter a valid postal code')\n        }\n      }, \n      error: error => {\n        console.log('Error is', error);\n      }\n    });\n  }\n\n  changePositionMap(lat: number, long: number){\n    const lat2 = 51.4700223\n    const long2 = -0.4542955\n\n    this.center = {\n      lat: lat,\n      lng: long\n    }\n    this.markers.push({\n      position: {\n        lat: lat,\n        lng: long\n      }\n    })\n\n    this.getDistanceFromLatLongInKm(lat, long, lat2, long2)\n    //define direction \n    const request: google.maps.DirectionsRequest = {\n      destination: {lat: lat2, lng: long2},\n      origin: {lat: lat, lng: long},\n      travelMode: google.maps.TravelMode.DRIVING\n    }\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  getDistanceFromLatLongInKm(lat1: number ,long1: number,lat2: number, long2:number) {\n    const radius = 6371;\n    const dLat = this.deg2rad(lat2-lat1);\n    const dLong = this.deg2rad(long2-long1);\n    const a =  Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \n    Math.sin(dLong/2) * Math.sin(dLong/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    this.distanceKm = parseFloat((radius * c).toFixed(2)); \n    this.distanceMiles = this.distanceKm * 0,621371;\n    console.log(parseFloat(this.distanceMiles));\n  }\n  \n  deg2rad(deg:number){\n    return deg * (Math.PI/180)\n  }\n\n  moveMap(event: google.maps.MapMouseEvent) {\n    if (event.latLng != null) this.center = (event.latLng.toJSON());\n  }\n  move(event: google.maps.MapMouseEvent) {\n      if (event.latLng != null) this.display = event.latLng.toJSON();\n  }\n}\n","<div class=\"form-group row\">\n  <div class=\"col-xs-12\">\n    <label class=\"control-label\">Postcode:</label>\n\n    <label class=\"sr-only\">Postcode</label>\n    <input type=\"postcode\" class=\"form-control\"\n           id=\"inputPassword2\" placeholder=\"Postcode\"\n           #postcode\n           (keyup.enter)=\"onEnter(postcode.value)\">\n  </div>\n</div>\n<br>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <google-map height=\"400px\" width=\"1140px\"\n                [center]=\"center\" [zoom]=\"zoom\"\n                (mapClick)=\"moveMap($event)\"\n                (mapMousemove)=\"move($event)\">\n      <map-marker *ngFor=\"let marker of markers\"\n                  [position]=\"marker.position\">\n      </map-marker>\n      <map-directions-renderer *ngIf=\"(directionsResults$ | async) as directionsResults\"\n                               [directions]=\"directionsResults\">\n      </map-directions-renderer>\n    </google-map>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <hr>\n    <ul class=\"list-group\">\n      <a class=\"list-group-item\" style=\"cursor: pointer\"\n         *ngFor=\"let postcode of postcodes\">\n\n        <label class=\"control-label\">postcode:</label>\n        {{ postcode.postcode }}\n\n        <label class=\"control-label\">Latitude:</label>\n        ({{ postcode.latitude\n        }})\n        <label class=\"control-label\">Longitude:</label>\n        {{\n        postcode.longitude }}\n        <label class=\"control-label\">Distance to London\n          Heathrow:</label>\n        {{\n        distanceKm }} km / {{\n        distanceMiles }} miles\n      </a>\n    </ul>\n  </div>\n\n</div>"]},"metadata":{},"sourceType":"module"}